btscan.c
--------
#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <bluetoothapis.h>

#pragma comment(lib, "Bthprops.lib")

void queryDevices() {
    BLUETOOTH_FIND_RADIO_PARAMS radioParams = { sizeof(BLUETOOTH_FIND_RADIO_PARAMS) };
    HANDLE radioHandle;
    HBLUETOOTH_RADIO_FIND radioFind = BluetoothFindFirstRadio(&radioParams, &radioHandle);

    if (radioFind != NULL) {
        do {
            BLUETOOTH_RADIO_INFO radioInfo = { sizeof(BLUETOOTH_RADIO_INFO), 0 };
            if (BluetoothGetRadioInfo(radioHandle, &radioInfo) == ERROR_SUCCESS) {
                printf("Radio found: %ws\n", radioInfo.szName);
            }

            BLUETOOTH_DEVICE_SEARCH_PARAMS searchParams = {
                sizeof(BLUETOOTH_DEVICE_SEARCH_PARAMS),
                1,
                0,
                1,
                1,
                1,
                15,
                radioHandle
            };
            BLUETOOTH_DEVICE_INFO deviceInfo = { sizeof(BLUETOOTH_DEVICE_INFO) };
            HBLUETOOTH_DEVICE_FIND deviceFind = BluetoothFindFirstDevice(&searchParams, &deviceInfo);

            if (deviceFind != NULL) {
                do {
                    printf("Found device: %ws\n", deviceInfo.szName);
                    printf("Address: %02X:%02X:%02X:%02X:%02X:%02X\n",
                        deviceInfo.Address.rgBytes[5],
                        deviceInfo.Address.rgBytes[4],
                        deviceInfo.Address.rgBytes[3],
                        deviceInfo.Address.rgBytes[2],
                        deviceInfo.Address.rgBytes[1],
                        deviceInfo.Address.rgBytes[0]);
                } while (BluetoothFindNextDevice(deviceFind, &deviceInfo));
                BluetoothFindDeviceClose(deviceFind);
            }
            CloseHandle(radioHandle);
        } while (BluetoothFindNextRadio(radioFind, &radioHandle));
        BluetoothFindRadioClose(radioFind);
    } else {
        printf("No Bluetooth radios found.\n");
    }
}

int main() {
    queryDevices();
    return 0;
}

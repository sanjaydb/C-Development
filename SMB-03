an example code for uploading multiple files to a shared SMB server using the Samba library in C:
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libsmbclient.h>

int main() {
    SMBCCTX *ctx;
    SMBCFILE *file;
    const char *server = "server";
    const char *share = "share";
    const char *username = "user";
    const char *password = "password";
    const char *local_dir = "/path/to/local/directory";
    const char *remote_dir = "/path/to/remote/directory";
    char local_path[PATH_MAX];
    char remote_path[PATH_MAX];
    struct smbc_dirent *dirent;
    SMBCFILE *infile, *outfile;
    char buffer[4096];
    size_t nread, nwritten;

    // Initialize Samba context
    smbc_init_context();
    ctx = smbc_new_context();

    // Connect to SMB server
    if (smbc_init_context(ctx) != 0) {
        fprintf(stderr, "Failed to initialize Samba context\n");
        return 1;
    }
    if (smbc_set_credentials(ctx, server, username, password) != 0) {
        fprintf(stderr, "Failed to set credentials\n");
        return 1;
    }

    // Open local directory
    DIR *dir = opendir(local_dir);
    if (dir == NULL) {
        fprintf(stderr, "Failed to open local directory %s\n", local_dir);
        return 1;
    }

    // Upload each file in local directory to remote directory
    while ((dirent = smbc_readdir(ctx, remote_dir)) != NULL) {
        // Skip directories and hidden files
        if (dirent->smbc_type == SMBC_DIR ||
            dirent->smbc_name[0] == '.') {
            continue;
        }

        // Create paths to local and remote files
        snprintf(local_path, PATH_MAX, "%s/%s", local_dir, dirent->smbc_name);
        snprintf(remote_path, PATH_MAX, "smb://%s/%s/%s", server, share, dirent->smbc_name);

        // Open local and remote files
        infile = fopen(local_path, "rb");
        if (infile == NULL) {
            fprintf(stderr, "Failed to open local file %s\n", local_path);
            continue;
        }
        outfile = smbc_creat(ctx, remote_path, O_WRONLY | O_TRUNC, 0666);
        if (outfile == NULL) {
            fprintf(stderr, "Failed to create remote file %s\n", remote_path);
            fclose(infile);
            continue;
        }

        // Copy data from local to remote file
        while ((nread = fread(buffer, 1, sizeof(buffer), infile)) > 0) {
            nwritten = smbc_write(ctx, outfile, buffer, nread);
            if (nwritten != nread) {
                fprintf(stderr, "Failed to write data to remote file\n");
                break;
            }
        }

        // Close files
        fclose(infile);
        smbc_close(outfile);
    }

    // Cleanup
    closedir(dir);
    smbc_free_context(ctx);
    smbc_shutdown_context();

    return 0;
}


This code uploads all files in a local directory specified by the local_dir variable to a remote directory specified by the remote_dir 
variable on a shared SMB server. The code uses the smbc_readdir() function to iterate over the files in the remote directory and skips any 
directories and hidden files. For each non-directory file,
- OM

Example - 01
------------
#include<stdio.h>
  
void san()
{
    printf("I am function san\n");
}
  
void funCall(void (*ptr)())
{
    (*ptr) (); 
}
  
int main()
{
    void (*ptr)() = &san;
    funCall(ptr);
   return 0;
}





Example - 02 
------------

#include <stdio.h>

// Callback function type definition
typedef void (*CallbackFunction)(int);

// Function that takes a callback function as an argument
void performOperation(int value, CallbackFunction callback) {
    printf("Performing some operation with value %d...\n", value);
    // Do some processing...

    // Call the callback function
    callback(value);
}

// Callback function to be called from performOperation
void callbackFunction(int value) {
    printf("Callback function called with value %d\n", value);
}

int main() {
    int num = 42;

    // Call performOperation and pass callbackFunction as the callback
    performOperation(num, callbackFunction);

    return 0;
}






Example - 03
------------
#include <stdio.h>
#include <stdlib.h>

// Callback function type definition for comparison
typedef int (*CompareFunction)(const void*, const void*);

// Generic sorting function with callback
void sortArray(void* arr, size_t numElements, size_t elementSize, CompareFunction compare) {
    qsort(arr, numElements, elementSize, compare);
}

// Callback function to compare integers (ascending order)
int compareIntegers(const void* a, const void* b) {
    int numA = *(const int*)a;
    int numB = *(const int*)b;
    return (numA - numB);
}

// Callback function to compare strings (in alphabetical order)
int compareStrings(const void* a, const void* b) {
    return strcmp(*(const char**)a, *(const char**)b);
}

int main() {
    int intArr[] = {5, 2, 8, 1, 9, 3};
    char* strArr[] = {"apple", "orange", "banana", "grape"};

    size_t numIntegers = sizeof(intArr) / sizeof(int);
    size_t numStrings = sizeof(strArr) / sizeof(char*);

    // Sort the integer array
    sortArray(intArr, numIntegers, sizeof(int), compareIntegers);

    printf("Sorted Integer Array: ");
    for (size_t i = 0; i < numIntegers; i++) {
        printf("%d ", intArr[i]);
    }
    printf("\n");

    // Sort the string array
    sortArray(strArr, numStrings, sizeof(char*), compareStrings);

    printf("Sorted String Array: ");
    for (size_t i = 0; i < numStrings; i++) {
        printf("%s ", strArr[i]);
    }
    printf("\n");

    return 0;
}
